{"version":3,"sources":["img/logo.png","context/auth.js","PrivateRoute.js","pages/Home.js","pages/Admin.js","utils/FlowerList.js","pages/FlowerBoard.js","components/AuthForm.js","pages/Login.js","pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","createContext","PrivateRoute","Component","component","rest","isAuthenticated","useContext","render","props","to","Home","Admin","FlowerList","flowers","map","flower","strainName","strainType","priceTier","inventoryQuantity","FLOWER_LIST_URL","FlowerBoard","fetchFlowers","setState","state","isFetching","axios","get","then","response","data","catch","e","console","log","timer","className","this","clearInterval","Card","styled","div","Form","Input","input","Button","button","Logo","img","Login","src","logoImg","type","placeholder","Signup","App","Provider","value","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.596aeca8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.947093ea.png\";","import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const isAuthenticated = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\n// import '../utils/generateFlowers';\n\nfunction Home(props) {\n  return <div>Home Page</div>;\n}\n\nexport default Home;\n","import React from \"react\";\r\n\r\nfunction Admin(props) {\r\n  return <div>Admin Page</div>;\r\n}\r\n\r\nexport default Admin;","import React from 'react'\n\nconst FlowerList = ({flowers}) =>\n  flowers.map(flower =>           \n  <div>\n    <h3>{flowers.strainName}</h3>\n    <p>{flowers.strainType}</p>\n    <p>{flowers.priceTier}</p>\n    <p>{flowers.inventoryQuantity} ea</p>\n  </div>\n  )\n\n  // const FlowerList = ({flowers}) =>\n  // flowers.map(flower => <li key={flower}>{flower}</li>)\n\nexport default FlowerList\n","import React, { Component } from 'react';\nimport FlowerList from '../utils/FlowerList';\nimport axios from 'axios';\n// import './App.css';\n\n\nconst FLOWER_LIST_URL = 'http://localhost:3001/flowers'\n\nclass FlowerBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = null;\n    this.state = {\n      isFetching: false,\n      flowers: ['1']};\n  }\n  render() {\n    const title = 'Quotes for ya!'\n    return (\n      <div className='App'>\n        <h2 className='App-title'>{title}</h2>\n        <p>{this.state.isFetching ? 'Fetching quotes...' : ''}</p>\n        <FlowerList flowers={this.state.flowers} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchFlowers()\n    // this.timer = setInterval(() => this.fetchFlowers(), 8000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  fetchFlowers = () => {\n    this.setState({...this.state, isFetching: true})\n    axios.get(FLOWER_LIST_URL)\n      .then(response => {\n        this.setState({flowers: response.data, isFetching: false})\n      })\n      .catch(e => console.log(e));\n  }\n\n}\n\nexport default FlowerBoard\n","import styled from 'styled-components';\r\n\r\nconst Card = styled.div`\r\n  box-sizing: border-box;\r\n  max-width: 410px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 1rem;\r\n  border: 1px solid #999;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\r\n  border-color: #3f4eae;\r\n  border-radius: 3px;\r\n  padding: 1rem;\r\n  color: white;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n`;\r\n\r\nexport { Form, Input, Button, Logo, Card, Error };","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport logoImg from \"../img/logo.png\";\r\nimport { Card, Logo, Form, Input, Button } from '../components/AuthForm';\r\n\r\nfunction Login() {\r\n  return (\r\n    <Card>\r\n      <Logo src={logoImg} />\r\n      <Form>\r\n        <Input type=\"email\" placeholder=\"email\" />\r\n        <Input type=\"password\" placeholder=\"password\" />\r\n        <Button>Sign In</Button>\r\n      </Form>\r\n      <Link to=\"/signup\">Don't have an account?</Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport logoImg from \"../img/logo.png\";\r\nimport { Card, Logo, Form, Input, Button } from '../components/AuthForm';\r\n\r\n\r\nfunction Signup() {\r\n  return (\r\n    <Card>\r\n      <Logo src={logoImg} />\r\n      <Form>\r\n        <Input type=\"email\" placeholder=\"email\" />\r\n        <Input type=\"password\" placeholder=\"password\" />\r\n        <Input type=\"password\" placeholder=\"password again\" />\r\n        <Button>Sign Up</Button>\r\n      </Form>\r\n      <Link to=\"/login\">Already have an account?</Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Signup;","\nimport React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport FlowerBoard from \"./pages/FlowerBoard\";\nimport { AuthContext } from \"./context/auth\";\nimport Login from \"./pages/Login\";\nimport Signup from './pages/Signup';\n\nfunction App(props) {\n  return (\n    <AuthContext.Provider value={false}>\n      <Router>\n        <div>\n          <ul>\n          <li>\n            <Link to=\"/\">Home Page</Link>\n          </li>\n          <li>\n            <Link to=\"/admin\">Admin Page</Link>\n          </li>\n          <li>\n            <Link to=\"/flowerboard\">Flower Menu</Link>\n          </li>\n          </ul>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <PrivateRoute path=\"/admin\" component={Admin} />\n          <PrivateRoute path=\"/flowerboard\" component={FlowerBoard} />\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n\n\n// import React from \"react\";\n// import { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\n// import Home from './pages/Home';\n// import Admin from './pages/Admin';\n// import FlowerBoard from \"./pages/FlowerBoard\";\n\n// function App(props) {\n//   return (\n//     <Router>\n//       <div>\n//         <ul>\n//           <li>\n//             <Link to=\"/\">Home Page</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/admin\">Admin Page</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/flowerboard\">Flower Menu</Link>\n//           </li>\n//         </ul>\n//         <Route exact path=\"/\" component={Home} />\n//         <Route path=\"/admin\" component={Admin} />\n//         <Route path=\"/flowerboard\" component={FlowerBoard} />\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}